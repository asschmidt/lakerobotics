/***********************************************************
 * Generated Parameter Header File for Node
 ***********************************************************
 * Node: {{ nodeName }}
 * Interface: {{ interfaceName }}
 * Network Version: {{ networkVersion }}
 *
 ***********************************************************
 *
 **********************************************************/

#ifndef {{ nodeHeaderName }}
#define {{ nodeHeaderName }}

#include <stdint.h>

/*
 * Defines for Parameter Numbers
 *
*/
{% for param in parameters %}
#define PARAM_ID_{{param.ID}}			{{param.GeneratorData['PARAM_NO']}}
{% endfor %}
#define PARAM_COUNT						{{parameters|length}}

/*
 * Declare data type structures for Parameter
 *
*/
typedef struct _Param_Struct
{
	{% for param in parameters %}
	// Param-ID: {{param.ID}} param-Type: {{param.Type}} Param-Size: {{param.Size}}
		{% if param.Type == 2 %}
	// Integer Parameter
			{% if param.Size == 1 or param.Size == 8 %}
	// 8 Bit
	int8_t {{param.ID}};
			{% elif param.Size == 16 %}
	// 16 Bit
	int16_t {{param.ID}};
			{% elif param.Size == 32 %}
	// 32 Bit
	int32_t {{param.ID}};
			{% endif %}
		{% endif %}
	{% endfor %}
} Param_Struct;

typedef struct _Param_Mapping
{
	uint8_t paramType;
	uint8_t paramSize;
	uint8_t* paramPointer;
} Param_Mapping;

/*
 * Global Variables
 *
*/
extern Param_Mapping gParameterMap[PARAM_COUNT];

/*
 * Function prototypes
 *
*/
extern int32_t parameterInitializeDefaultValues(Param_Struct* pParamStruct);

#endif